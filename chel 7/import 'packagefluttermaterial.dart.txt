import 'package:flutter/material.dart';

void main() {
  runApp(SweetMajestyApp());
}

class SweetMajestyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Sweet Majesty Cakes',
      theme: ThemeData(
        primarySwatch: Colors.pink,
      ),
      home: CakeMenuPage(),
    );
  }
}

class CakeMenuPage extends StatelessWidget {
  final List<Map<String, dynamic>> cakes = [
    {'name': 'Red Velvet', 'price': 25.0, 'color': Colors.red},
    {'name': 'Chocolate Fudge', 'price': 30.0, 'color': Colors.brown},
    {'name': 'Vanilla Delight', 'price': 20.0, 'color': Colors.yellow},
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Sweet Majesty Cakes'),
        backgroundColor: Colors.pink,
      ),
      body: ListView.builder(
        itemCount: cakes.length,
        itemBuilder: (context, index) {
          final cake = cakes[index];
          return CakeCard(cake: cake);
        },
      ),
    );
  }
}

class CakeCard extends StatefulWidget {
  final Map<String, dynamic> cake;

  CakeCard({required this.cake});

  @override
  _CakeCardState createState() => _CakeCardState();
}

class _CakeCardState extends State<CakeCard> {
  bool _isButtonHovered = false;

  @override
  Widget build(BuildContext context) {
    return AnimatedOpacity(
      opacity: 1.0,
      duration: Duration(milliseconds: 500),
      child: Card(
        margin: EdgeInsets.all(8.0),
        color: widget.cake['color'], // Setting background color for each cake
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
        child: ListTile(
          title: Text(
            widget.cake['name'],
            style: TextStyle(fontWeight: FontWeight.bold, color: Colors.white),
          ),
          subtitle: Text(
            '\$${widget.cake['price']}',
            style: TextStyle(color: Colors.white),
          ),
          trailing: AnimatedScale(
            scale: _isButtonHovered ? 1.1 : 1.0,
            duration: Duration(milliseconds: 200),
            child: ElevatedButton(
              style: ElevatedButton.styleFrom(backgroundColor: Colors.white),
              child: Text(
                'Order',
                style: TextStyle(color: widget.cake['color']),
              ),
              onPressed: () {
                showDialog(
                  context: context,
                  builder: (context) {
                    return AlertDialog(
                      title: Text('Order Confirmed!'),
                      content:
                          Text('You ordered the ${widget.cake['name']} cake.'),
                      actions: [
                        TextButton(
                          onPressed: () => Navigator.pop(context),
                          child: Text('OK'),
                        ),
                      ],
                    );
                  },
                );
              },
              onHover: (isHovered) {
                setState(() {
                  _isButtonHovered = isHovered;
                });
              },
            ),
          ),
        ),
      ),
    );
  }
}